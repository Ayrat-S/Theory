2.4. Чек-листы, тест-кейсы, наборы тест-кейсов
2.4.1. Чек-лист

Чек-лист - визуально структурированная и логичная цепочка идей, без указания шагов и ожидаемых результатов.

На примере большого списка продуктов для покупки в магазине:
Список можно упорядочить по видам продуктов - молочное, фрукты, мясное и т.п.. 
Ведь гораздо легче сразу набрать необходимое в одном отделе продуктов, а потом в другом, чем потом бегать по всей площади магазина наполняя корзину рандомно.


ВАЖНЫЕ СВОЙСТВА ЧЕК-ЛИСТОВ
Соответсвенно, чтобы от списка идей было больше пользы, нужно учитывать следующие важные свойства чек-листов:
- Логичность (список идей должен быть написан на основе целей и сгруппирован, где не должна быть не взаимосвязанная свалка идей);

- Последовательность (понятные переходы между группами идей);

- Структурированность (визуально будет гораздо удобней ориенитроваться в многоуровневом списке);

- Полнота (ничто важное не упущено);

- Неизбыточность (нужна только сухая выжимка, без дублирования идей).



СВОЙСТВА КАЧЕСТВЕННЫХ ТРЕБОВАНИЙ
Задание 2.4.а: перечитайте главу «Свойства качественных требований»{41} и подумайте, какие свойства качественных требований можно также считать и свойствами качественных чек-листов.

Свойства качественных требований:
- Завершенность (completeneness) - ничто не пропущено по соображениям "это итак всем понятно".

- Атомарность, единичность (atomicity) - его нельзя разбить на отдельные требования и оно описывает только одну ситуацию.

- Непротиворечивость, последовательность (consistency) - незаменимым инструментом является графическое представление разрабатываемой системы, на которой противоречия очень заметны. LUCIDCHART.

- Недвусмысленность (unambiguousness, clearness) - без использования жаргона, неочевидных аббревиатур и расплывчатых формулировок, т.е. не должно быть использование терминов или фраз, допускающих субъективное толкование.

- Выполнимость (feasibility) - требование должно быть технологически выполнимым и реализуемым в рамках бюджета и сроков разработки проекта.

- Обязательность, нужность (obligatoriness) - если требование не является обязательным к реализации, оно должно быть просто исключено из набора требований.

- Актуальность (up-to-date) - исключены (или переработаны) должны быть требования, утратившие актуальность.

- Прослеживаемость (tracebility) - вертикальная и горизонтальная прослеживаемость. «откуда взялось это требование?», «где описаны сопутствующие (связанные) требования?», «на что это влияет?».

- Модифицируемость (modifiability) - Если при внесении изменений в набор требований, мы сталкиваемся с проблемами, характерными для ситуации потери прослеживаемости, значит – мы обнаружили проблему с модифицируемостью.

- Проранжированность: по важности, стабильности, срочности (ranked for: importance, stability, priority) - в первую очередь надо делать ключевые задачи, в которые в обозримом будущем не будут внесены никакие изменения, с соблюдением срочности по вводу функциональности в эксплуатацию.

- Корректность (correctness) и Проверяемость (verifiability) - фактически эти свойства вытекают из всех вышеперечисленных.
ПРОВЕРЯЕМОСТЬ подразумевает возможность создания объективного тест-кейса (кейсов), однозначно показывающего, что требование реализовано верно и поведение приложения в точности соответствует ребованию.
КОРРЕКТНОСТЬ - опечатки, грамматические ошибки, плохое оформление текста и графической информации, излишняя или недостаточная глубина детализации, требования к пользователю а не приложению, наличие неаргументированных требований к дизайну и архитектуре.

Остановился на 113стр:
"
 Итак, рассмотрим процесс создания чек-листа. В главе «Пример анализа и
тестирования требований»{51} приведён пример итоговой версии требований{57}
, который мы и будем использовать.
"



























